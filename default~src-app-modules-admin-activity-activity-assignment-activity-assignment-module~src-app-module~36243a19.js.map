{"version":3,"sources":["./src/app/modules/ui/select/panel-list/panel-list.component.ts","./src/app/modules/ui/select/panel-list/panel-list.component.html","./src/app/modules/ui/select/select.component.ts","./src/app/modules/ui/select/select.component.html","./src/app/modules/ui/select/select.module.ts"],"names":[],"mappings":"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","file":"default~src-app-modules-admin-activity-activity-assignment-activity-assignment-module~src-app-module~36243a19.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\n\nimport { MatSelectionList, MatListOption} from '@angular/material/list';\n\n@Component({\n  selector: 'app-panel-list',\n  templateUrl: './panel-list.component.html',\n  styleUrls: ['./panel-list.component.scss']\n})\nexport class PanelListComponent implements OnInit {\n\n  filteredValues:any = [];\n\n\n  @Input() fieldList:any;\n  @Input() selectedItem:any;\n  @Input() fieldValue:string;\n\n  @Output() public outputParams = new EventEmitter();\n\n\n  constructor() { }\n\n  filterValues(event): void\n  {\n      // Get the value\n      const value = event.target.value.toLowerCase();\n\n      // Filter the tags\n      this.filteredValues = this.fieldList.filter(data => data[this.fieldValue].toString().toLowerCase().includes(value));\n  }\n\n  filterValuesInputKeyDown(event): void {\n      // Return, if the pressed key is not 'Enter'\n      if ( event.key !== 'Enter' )\n      {\n          return;\n      }\n\n  }\n\n  onListSelect() {\n    this.outputParams.emit({\n      selectedItem: this.selectedItem\n    });\n  }\n\n  ngOnInit(): void {\n\n    if(this.fieldList != undefined){\n      this.filteredValues = this.fieldList;\n    }\n    \n  }\n\n  ngOnChanges(changes): void {\n  }\n\n}\n","<div class=\"select-details-panel\">\n\n    <div class=\"select-panel-header\">\n\n        <div class=\"new-value\">\n            <mat-icon [svgIcon]=\"'search'\"></mat-icon>\n            <input type=\"text\"\n                   placeholder=\"Enter a value\"\n                   (input)=\"filterValues($event)\"\n                   (keydown)=\"filterValuesInputKeyDown($event)\"\n                   [maxLength]=\"50\"\n                   #newValueInput>\n        </div>\n\n    </div>\n\n    <div class=\"available-values\" *ngIf=\"filteredValues.length != 0\">\n\n        <!-- Values  -->\n        <mat-selection-list #selectionList [multiple]=\"false\" [(ngModel)]=\"selectedItem\" (selectionChange)=\"onListSelect()\">\n            <mat-list-option class=\"mat-primary\"\n            *ngFor=\"let value of filteredValues\"\n            [value]=\"value\"\n            >\n              {{value[fieldValue]}}\n            </mat-list-option>\n        </mat-selection-list>\n\n    </div>\n\n    <div class=\"no-value\" *ngIf=\"filteredValues.length == 0\">\n        <div class=\"text-secondary\">No Records</div>\n    </div>\n\n</div>\n","import { Component, OnInit, Input, ViewEncapsulation, ViewChild, ElementRef, TemplateRef, ViewContainerRef, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'learn-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class SelectComponent implements OnInit {\n\n  fieldName:string = \"\";\n\n  selectedItem = [];\n  selectedModel:string = \"\";\n\n  @Input() fieldRequired:string;\n  @Input() labelText:string;\n  @Input() fieldPlaceholder:string;\n  @Input() fieldList:any;\n  @Input() fieldValue:string;\n  @Input() isDisabled?:boolean;\n  @Input() fieldModel?:any;\n  @Input() fieldId:any;\n  @Input() isLabel?:any;\n  @Input() toolTip?:string;\n  @Input() isClear?:boolean = true;\n\n  @Output() public fieldParams = new EventEmitter();\n\n  // Private\n  private _selectPanelOverlayRef: OverlayRef;\n\n  @ViewChild('selectPanel')\n  private _tagsPanel: TemplateRef<any>;\n\n  constructor(\n    private _overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef,\n    private _element:ElementRef\n  ) { }\n\n  isFieldRequired(){\n    return this.fieldRequired == \"required\" ? true : false;\n  }\n\n  getFieldModel(event){\n    this.fieldModel = event.selectedItem[0][this.fieldValue]\n    this.fieldParams.emit(event.selectedItem)\n    this.selectedItem = event.selectedItem;\n    this._selectPanelOverlayRef.detach();\n  }\n\n\n  isValue() {\n    return this.selectedModel != '' ? true : false\n  }\n\n  isFieldValue(){\n    return (this.selectedModel != null && this.fieldModel != undefined) ? true : false;\n  }\n\n  isTooltip(){\n    return this.toolTip != undefined ? true : false\n  }\n\n  clearSelection(){\n\n    this.selectedModel = \"\";\n\n    const newObj = Object.keys(this.selectedItem[0]).reduce(\n      (accumulator, current) => {\n        accumulator[current] = null;\n        return accumulator\n    }, {});\n\n    var selectedItem = [newObj];\n    this.selectedItem = [newObj];\n    this.fieldParams.emit(selectedItem)\n  }\n\n\n  OpenDropDown() {\n\n    // Create the overlay\n    this._selectPanelOverlayRef = this._overlay.create({\n      backdropClass   : '',\n      hasBackdrop     : true,\n      scrollStrategy  : this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position()\n                            .flexibleConnectedTo(this._element.nativeElement)\n                            .withFlexibleDimensions()\n                            .withViewportMargin(0)\n                            .withLockedPosition()\n                            .withPositions([\n                                {\n                                    originX : 'start',\n                                    originY : 'bottom',\n                                    overlayX: 'start',\n                                    overlayY: 'top'\n                                }\n                            ])\n    });\n\n\n    // Create a portal from the template\n    const templatePortal = new TemplatePortal(this._tagsPanel, this._viewContainerRef);\n\n    // Attach the portal to the overlay\n    this._selectPanelOverlayRef.attach(templatePortal);\n\n    let cdks = document.querySelectorAll('.cdk-overlay-backdrop');\n\n    [].forEach.call(cdks, function(el, i) {\n      el.style.zIndex = parseInt(\"100000\")+i;\n      if(i==0){\n        el.style.opacity = 1\n      }\n      else {\n        el.style.opacity = 0\n      }\n    });\n\n    // Subscribe to the backdrop click\n    this._selectPanelOverlayRef.backdropClick().subscribe(() => {\n\n        // If overlay exists and attached...\n        if ( this._selectPanelOverlayRef && this._selectPanelOverlayRef.hasAttached() )\n        {\n            // Detach it\n            this._selectPanelOverlayRef.detach();\n\n        }\n\n        // If template portal exists and attached...\n        if ( templatePortal && templatePortal.isAttached )\n        {\n            // Detach it\n            templatePortal.detach();\n        }\n    });\n\n  }\n\n  camelCase(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    }).replace(/\\s+/g, '');\n  }\n\n  getLabelText(text){\n    return text.replace(/[0-9]/g, '');\n  }\n\n  ngOnInit(): void {\n    this.fieldName = this.camelCase(this.labelText)\n  }\n\n  ngOnChanges(): void {\n\n    if((this.fieldModel != undefined && this.fieldModel != \"\" && this.fieldModel != null) && this.fieldList != undefined){\n      this.selectedItem = this.fieldList.filter( item => { return item[this.fieldId] == this.fieldModel } )\n      if(this.selectedItem.length != 0)\n        this.selectedModel = this.selectedItem[0][this.fieldValue]\n    }\n    else {\n      this.selectedModel = \"\"\n      this.selectedItem = [];\n    }\n\n  }\n\n\n}\n","<div class=\"select-wrapper input-box\" #selectFieldElem>\n    <label [ngClass]=\"isLabel == 'false' ? 'd-none' : ''\" for=\"{{fieldName}}\">{{getLabelText(labelText)}}<span *ngIf=\"isFieldRequired()\" class=\"ml-2 text-warn font-medium\">*</span></label>\n    <div class=\"input-wrapper\">\n        <input type=\"text\"\n        readonly\n        class=\"form-control condo-select\"\n        placeholder = \"{{fieldPlaceholder}}\"\n        name = \"{{fieldName}}\"\n        [required]=\"isFieldRequired() ? 'required' : null\"\n        [(ngModel)]=\"selectedModel\"\n        (click)=\"OpenDropDown()\"\n        [ngClass]=\"isDisabled? 'input-disabled' : ''\"\n        autocomplete=\"off\" readonly>\n        <mat-icon class=\"arrow\" svgIcon=\"mat_outline:keyboard_arrow_down\" (click)=\"OpenDropDown()\"></mat-icon>\n        <mat-icon class=\"close delete\" [svgIcon]=\"'close'\" *ngIf=\"isValue() && isFieldValue() && isClear\" (click)=\"clearSelection()\"></mat-icon>\n        <help-tooltip title=\"{{toolTip}}\" *ngIf=\"(!isValue() && isTooltip()) || (!isFieldValue() && isTooltip())\"></help-tooltip>\n    </div>\n</div>\n\n <!-- Tags panel -->\n <ng-template #selectPanel>\n    <app-panel-list [fieldList]=\"fieldList\"\n    [fieldValue]=\"fieldValue\"\n    [selectedItem]=\"selectedItem\"\n    (outputParams)=\"getFieldModel($event)\" ></app-panel-list>\n </ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/material';\nimport { SelectComponent } from './select.component';\nimport { PanelListComponent } from './panel-list/panel-list.component';\n\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\n\n@NgModule({\n  declarations: [SelectComponent, PanelListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HelpTooltipModule\n  ],\n  exports     : [\n    SelectComponent\n  ],\n  bootstrap: [\n    SelectComponent\n  ]\n})\nexport class SelectModule { }\n"],"sourceRoot":"webpack:///"}