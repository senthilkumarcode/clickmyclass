{"version":3,"sources":["./src/app/modules/ui/multi-select/multi-select.component.ts","./src/app/modules/ui/multi-select/multi-select.component.html","./src/app/modules/ui/multi-select/multi-select.module.ts","./src/app/modules/ui/multi-select/multi-panel-list/multi-panel-list.component.ts","./src/app/modules/ui/multi-select/multi-panel-list/multi-panel-list.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmK;AAE9G;AACK;;;;;;;;;;ICF6C,2EAAmE;IAAA,4DAAC;IAAA,4DAAO;;;;IAG1K,6EACE;IAAA,2EAAuB;IAAA,uDAAc;IAAA,4DAAO;IAC5C,+EAA8E;IAA3B,qWAA0B;IAAC,4DAAW;IAC3F,4DAAS;;;IAFgB,0DAAc;IAAd,8EAAc;;;IAIrC,wEACE;IAAA,0EAAmE;IAAA,2EAAuB;IAAA,iEAAM;IAAA,4DAAO;IACzG,qEAAe;;;IACf,wEACE;IAAA,0EAAmE;IAAA,2EAAuB;IAAA,+DAAI;IAAA,4DAAO;IACvG,qEAAe;;;IAGnB,8EAAoE;;;IAAtD,4FAAmB;;;;IAMrC,2FAAkJ;IAA1C,mXAAyC;IAAC,4DAAuB;;;IAAnJ,+FAA+B;;ADXhD,MAAM,oBAAoB;IA4B/B,YACU,QAAiB,EACjB,iBAAmC,EACnC,QAAmB;QAFnB,aAAQ,GAAR,QAAQ,CAAS;QACjB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,aAAQ,GAAR,QAAQ,CAAW;QA7B7B,cAAS,GAAU,EAAE,CAAC;QAEtB,kBAAa,GAAO,EAAE,CAAC;QAYd,YAAO,GAAY,IAAI,CAAC;QAEhB,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;IAc9C,CAAC;IAEL,SAAS;QACP,OAAO,IAAI,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;IACjD,CAAC;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACpD,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;QAEV,qBAAqB;QACrB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACjD,aAAa,EAAK,EAAE;YACpB,WAAW,EAAO,IAAI;YACtB,cAAc,EAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE;YACxD,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;iBACnB,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;iBAChD,sBAAsB,EAAE;iBACxB,kBAAkB,CAAC,CAAC,CAAC;iBACrB,kBAAkB,EAAE;iBACpB,aAAa,CAAC;gBACX;oBACI,OAAO,EAAG,OAAO;oBACjB,OAAO,EAAG,QAAQ;oBAClB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAClB;aACJ,CAAC;SACzB,CAAC,CAAC;QAGH,oCAAoC;QACpC,MAAM,cAAc,GAAG,IAAI,kEAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEnF,mCAAmC;QACnC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEnD,IAAI,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC;QAE9D,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,UAAS,EAAE,EAAE,CAAC;YAClC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAC,CAAC,CAAC;YACvC,IAAG,CAAC,IAAE,CAAC,EAAC;gBACN,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC;aACrB;iBACI;gBACH,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;QAEH,kCAAkC;QAClC,IAAI,CAAC,sBAAsB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;YAEvD,oCAAoC;YACpC,IAAK,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,EAC7E;gBACI,YAAY;gBACZ,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;aAExC;YAED,4CAA4C;YAC5C,IAAK,cAAc,IAAI,cAAc,CAAC,UAAU,EAChD;gBACI,YAAY;gBACZ,cAAc,CAAC,MAAM,EAAE,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzD,CAAC;IAED,SAAS,CAAC,GAAG;QACX,OAAO,GAAG,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACxD,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ;IACR,CAAC;;wFA9HU,oBAAoB;oGAApB,oBAAoB;;;;;kaAFhB,CAAE,EAAE,OAAO,EAAE,+DAAgB,EAAE,WAAW,EAAE,qDAAM,EAAE,CAAE;QCVvE,yEACE;QAAA,2EAA0E;QAAA,uDAA2B;QAAA,kHAA2E;QAAA,4DAAQ;QACxL,yEACI;QAAA,yEACE;QAAA,sHAGS;QACT,4EACE;QADiF,4IAAS,kBAAc,IAAC;QACzG,kIAEe;QACf,kIAEe;QACjB,4DAAS;QACX,4DAAM;QACN,oIAAoE;QACxE,4DAAM;QACR,4DAAM;QAGL,8MAEa;;QAvB0C,0DAAmB;QAAnB,yFAAmB;QAAlE,2GAA8C;QAAqB,0DAA2B;QAA3B,gGAA2B;QAAO,0DAAuB;QAAvB,uFAAuB;QAG3C,0DAAkB;QAAlB,sFAAkB;QAKnF,0DAA+B;QAA/B,+FAA+B;QAG/B,0DAA+B;QAA/B,+FAA+B;QAKhB,0DAAiB;QAAjB,iFAAiB;;6FDL5C,oBAAoB;cAPhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;gBAC5C,aAAa,EAAI,+DAAiB,CAAC,IAAI;gBACvC,aAAa,EAAE,CAAE,EAAE,OAAO,EAAE,+DAAgB,EAAE,WAAW,EAAE,qDAAM,EAAE,CAAE;aACtE;0PAOU,aAAa;kBAArB,mDAAK;YACG,SAAS;kBAAjB,mDAAK;YACG,gBAAgB;kBAAxB,mDAAK;YACG,SAAS;kBAAjB,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YACG,OAAO;kBAAf,mDAAK;YACG,OAAO;kBAAf,mDAAK;YACG,OAAO;kBAAf,mDAAK;YACG,OAAO;kBAAf,mDAAK;YAEW,WAAW;kBAA3B,oDAAM;YAMC,UAAU;kBADjB,uDAAS;mBAAC,aAAa;;;;;;;;;;;;;;AEnC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;AAChB;AACsC;AAExB;AACwB;;AAiBjF,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAXnB;YACP,4DAAY;YACZ,0DAAW;YACX,+DAAc;YACd,kEAAmB;YACnB,qGAAiB;SAClB;mIAKU,iBAAiB,mBAZb,4EAAoB,EAAE,oGAAuB,aAE1D,4DAAY;QACZ,0DAAW;QACX,+DAAc;QACd,kEAAmB;QACnB,qGAAiB,aAGjB,4EAAoB;6FAGX,iBAAiB;cAb7B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,4EAAoB,EAAE,oGAAuB,CAAC;gBAC7D,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,+DAAc;oBACd,kEAAmB;oBACnB,qGAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,4EAAoB;iBACrB;aACF;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;;;ICoBrE,sFAGA;IAAA,mFAA8F;IAAhF,gQAA2B;IAAqD,2EAAmB;IAAA,uDAAqB;IAAA,4DAAO;IAAA,4DAAe;IAC5J,4DAAkB;;;;IAFlB,2EAAe;IACD,0DAA2B;IAA3B,qFAA2B;IAAwE,0DAAqB;IAArB,4FAAqB;;;;IAP9I,yEAEI;IACA,4FACI;IADkD,wWAA0B;IAC5E,kJAIkB;IACtB,4DAAqB;IAEzB,4DAAM;;;IARiC,0DAAkB;IAAlB,2EAAkB;IAE/B,0DAAiB;IAAjB,0FAAiB;;;IAQ3C,0EACI;IAAA,0EAA4B;IAAA,qEAAU;IAAA,4DAAM;IAChD,4DAAM;;ADxBD,MAAM,uBAAuB;IAalC;QAXA,mBAAc,GAAO,EAAE,CAAC;QAMf,kBAAa,GAAO,EAAE,CAAC;QAGf,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEnC,CAAC;IAEjB,YAAY,CAAC,KAAK;QAEd,gBAAgB;QAChB,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAE/C,kBAAkB;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IACxH,CAAC;IAED,wBAAwB,CAAC,KAAK;QAC1B,4CAA4C;QAC5C,IAAK,KAAK,CAAC,GAAG,KAAK,OAAO,EAC1B;YACI,OAAO;SACV;IAEL,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACpD,OAAO,IAAI,CAAC,OAAO;QACrB,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QAEN,IAAG,IAAI,CAAC,SAAS,IAAI,SAAS,EAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;SACtC;QAED,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QACjF,CAAC,CAAC;IAEJ,CAAC;;8FAlDU,uBAAuB;uGAAvB,uBAAuB;QCPpC,yEAEE;QAAA,yEAEI;QAAA,yEACI;QAAA,yEAA0C;QAC1C,8EAMJ;QAJW,oJAAS,wBAAoB,IAAC,gGACnB,oCAAgC,IADb;QAFrC,4DAMJ;QAAA,4DAAM;QAEV,4DAAM;QAEN,mHAWM;QAEN,mHAEM;QAER,4DAAM;;QA5Bc,0DAAoB;QAApB,6EAAoB;QAKvB,0DAAgB;QAAhB,yEAAgB;QAMA,0DAAgC;QAAhC,gGAAgC;QAaxC,0DAAgC;QAAhC,gGAAgC;;6FDtB5C,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;sCAKU,SAAS;kBAAjB,mDAAK;YACG,YAAY;kBAApB,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YAEG,aAAa;kBAArB,mDAAK;YAGW,YAAY;kBAA5B,oDAAM","file":"default~src-app-modules-admin-enquiries-add-enquiry-add-enquiry-module~src-app-modules-admin-notific~a2a6f575.js","sourcesContent":["import { Component, OnInit, Input, ViewEncapsulation, ViewChild, ElementRef, TemplateRef, ViewContainerRef, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'learn-multi-select',\n  templateUrl: './multi-select.component.html',\n  styleUrls: ['./multi-select.component.scss'],\n  encapsulation  : ViewEncapsulation.None,\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\nexport class MultiSelectComponent implements OnInit {\n\n  fieldName:string = \"\";\n\n  selectedItems:any = [];\n\n  @Input() fieldRequired:string;\n  @Input() labelText:string;\n  @Input() fieldPlaceholder:string;\n  @Input() fieldList:any;\n  @Input() fieldValue:string;\n  @Input() isDisabled?:boolean;\n  @Input() fieldModel?:any;\n  @Input() fieldId:any;\n  @Input() isLabel?:any;\n  @Input() toolTip?:string;\n  @Input() isClear?:boolean = true;\n\n  @Output() public fieldParams = new EventEmitter();\n\n  // Private\n  private _selectPanelOverlayRef: OverlayRef;\n\n  @ViewChild('selectPanel')\n  private _tagsPanel: TemplateRef<any>;\n\n\n\n  constructor(\n    private _overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef,\n    private _element:ElementRef\n  ) { }\n\n  isTooltip(){\n    return this.toolTip != undefined ? true : false\n  }\n\n  getSelectedItems(event) {\n    this.selectedItems = event;\n    this.fieldParams.emit(this.selectedItems);\n  }\n\n  deleteItem(item) {\n    this.selectedItems = this.selectedItems.filter(chip => {\n      return chip.value != item.value\n    })\n  }\n\n  OpenDropDown() {\n\n    // Create the overlay\n    this._selectPanelOverlayRef = this._overlay.create({\n      backdropClass   : '',\n      hasBackdrop     : true,\n      scrollStrategy  : this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position()\n                            .flexibleConnectedTo(this._element.nativeElement)\n                            .withFlexibleDimensions()\n                            .withViewportMargin(0)\n                            .withLockedPosition()\n                            .withPositions([\n                                {\n                                    originX : 'start',\n                                    originY : 'bottom',\n                                    overlayX: 'start',\n                                    overlayY: 'top'\n                                }\n                            ])\n    });\n\n\n    // Create a portal from the template\n    const templatePortal = new TemplatePortal(this._tagsPanel, this._viewContainerRef);\n\n    // Attach the portal to the overlay\n    this._selectPanelOverlayRef.attach(templatePortal);\n\n    let cdks = document.querySelectorAll('.cdk-overlay-backdrop');\n\n    [].forEach.call(cdks, function(el, i) {\n      el.style.zIndex = parseInt(\"100000\")+i;\n      if(i==0){\n        el.style.opacity = 1\n      }\n      else {\n        el.style.opacity = 0\n      }\n    });\n\n    // Subscribe to the backdrop click\n    this._selectPanelOverlayRef.backdropClick().subscribe(() => {\n\n        // If overlay exists and attached...\n        if ( this._selectPanelOverlayRef && this._selectPanelOverlayRef.hasAttached() )\n        {\n            // Detach it\n            this._selectPanelOverlayRef.detach();\n\n        }\n\n        // If template portal exists and attached...\n        if ( templatePortal && templatePortal.isAttached )\n        {\n            // Detach it\n            templatePortal.detach();\n        }\n    });\n\n  }\n\n  isFieldRequired(){\n    return this.fieldRequired == \"required\" ? true : false;\n  }\n\n  camelCase(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    }).replace(/\\s+/g, '');\n  }\n\n  getLabelText(text){\n    return text.replace(/[0-9]/g, '');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"multi-select-wrapper input-box\">\n  <label [ngClass]=\"isLabel == 'false' ? 'd-none' : ''\" for=\"{{fieldName}}\">{{getLabelText(labelText)}}<span *ngIf=\"isFieldRequired()\" class=\"ml-2 text-warn font-medium\">*</span></label>\n  <div class=\"input-wrapper\">\n      <div class=\"tags flex align-items-center\">\n        <button mat-button class=\"tag px-4 flex align-items-center mr-3\" *ngFor=\"let item of selectedItems; let i = index\">\n          <span class=\"text-smr\">{{item.value}}</span>\n          <mat-icon class=\"ml-2 icon-sm\" svgIcon=\"feather:x\" (click)=\"deleteItem(item)\"></mat-icon>\n        </button>\n        <button mat-button class=\"tag px-4 flex align-items-center add-tag cursor-pointer\" (click)=\"OpenDropDown()\">\n          <ng-container *ngIf=\"selectedItems.length == 0\">\n            <mat-icon class=\"mr-2 icon-sm\" svgIcon=\"dripicons:plus\"></mat-icon><span class=\"text-smr\">Select</span>\n          </ng-container>\n          <ng-container *ngIf=\"selectedItems.length != 0\">\n            <mat-icon class=\"mr-2 icon-sm\" svgIcon=\"feather:edit-2\"></mat-icon><span class=\"text-smr\">Edit</span>\n          </ng-container>\n        </button>\n      </div>\n      <help-tooltip title=\"{{toolTip}}\"*ngIf=\"isTooltip()\"></help-tooltip>\n  </div>\n</div>\n\n <!-- Tags panel -->\n <ng-template #selectPanel>\n  <app-multi-panel-list [selectedItems]=\"selectedItems\" [fieldList]=\"fieldList\" [fieldValue]=\"fieldValue\" (outputParams)=\"getSelectedItems($event)\"></app-multi-panel-list>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/material';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module';\n\nimport { MultiSelectComponent } from './multi-select.component';\nimport { MultiPanelListComponent } from './multi-panel-list/multi-panel-list.component';\n\n\n\n@NgModule({\n  declarations: [MultiSelectComponent, MultiPanelListComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HelpTooltipModule\n  ],\n  exports: [\n    MultiSelectComponent\n  ]\n})\nexport class MultiSelectModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-multi-panel-list',\n  templateUrl: './multi-panel-list.component.html',\n  styleUrls: ['./multi-panel-list.component.scss']\n})\nexport class MultiPanelListComponent implements OnInit {\n\n  filteredValues:any = [];\n\n  @Input() fieldList:any;\n  @Input() selectedItem:any;\n  @Input() fieldValue:string;\n\n  @Input() selectedItems:any = [];\n\n\n  @Output() public outputParams = new EventEmitter();\n\n  constructor() { }\n\n  filterValues(event): void\n  {\n      // Get the value\n      const value = event.target.value.toLowerCase();\n\n      // Filter the tags\n      this.filteredValues = this.fieldList.filter(data => data[this.fieldValue].toString().toLowerCase().includes(value));\n  }\n\n  filterValuesInputKeyDown(event): void {\n      // Return, if the pressed key is not 'Enter'\n      if ( event.key !== 'Enter' )\n      {\n          return;\n      }\n\n  }\n\n  onListSelect(event) {\n    let selectedItems = this.filteredValues.filter(item => {\n      return item.checked\n    })\n    this.outputParams.emit(selectedItems);\n  }\n\n  ngOnInit(): void {\n\n    if(this.fieldList != undefined){\n      this.filteredValues = this.fieldList;\n    }\n\n    this.filteredValues.map(item => {\n      return item.checked = this.selectedItems.some(chip => chip.value == item.value)\n    })\n\n  }\n\n\n}\n","<div class=\"multi-select-details-panel\">\n\n  <div class=\"select-panel-header\">\n\n      <div class=\"new-value\">\n          <mat-icon [svgIcon]=\"'search'\"></mat-icon>\n          <input type=\"text\"\n                 placeholder=\"Enter a value\"\n                 (input)=\"filterValues($event)\"\n                 (keydown)=\"filterValuesInputKeyDown($event)\"\n                 [maxLength]=\"50\"\n                 #newValueInput>\n      </div>\n\n  </div>\n\n  <div class=\"available-values\" *ngIf=\"filteredValues.length != 0\">\n\n      <!-- Values  -->\n      <mat-selection-list #selectionList [multiple]=\"false\" [(ngModel)]=\"selectedItem\">\n          <mat-list-option class=\"mat-primary\"\n          *ngFor=\"let value of filteredValues\"\n          [value]=\"value\">\n          <mat-checkbox [(ngModel)]=\"value.checked\" [color]=\"'primary'\" (change)=\"onListSelect($event)\"><span class=\"ml-4\">{{value[fieldValue]}}</span></mat-checkbox>\n          </mat-list-option>\n      </mat-selection-list>\n\n  </div>\n\n  <div class=\"no-value\" *ngIf=\"filteredValues.length == 0\">\n      <div class=\"text-secondary\">No Records</div>\n  </div>\n\n</div>\n"],"sourceRoot":"webpack:///"}