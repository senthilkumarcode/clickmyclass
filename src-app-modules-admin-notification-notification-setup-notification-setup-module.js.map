{"version":3,"sources":["./src/app/modules/admin/notification/notification-setup/notification-setup.module.ts","./src/app/modules/admin/notification/notification-setup/notification-setup.component.ts","./src/app/modules/admin/notification/notification-setup/notification-setup.component.html","./src/app/modules/admin/notification/notification-setup/notification-category/notification-category.module.ts","./src/app/modules/admin/notification/notification-setup/notification-category/notification-category.component.ts","./src/app/modules/admin/notification/notification-setup/notification-category/notification-category.component.html","./src/app/modules/admin/notification/notification-setup/notification-category/notification-category-routing.module.ts","./src/app/modules/admin/notification/notification-setup/notification-category/add-notification-category/add-notification-category.component.ts","./src/app/modules/admin/notification/notification-setup/notification-category/add-notification-category/add-notification-category.component.html","./src/app/modules/admin/notification/notification-setup/notification-setup.resolver.ts","./src/app/modules/admin/notification/notification-setup/notification-setup-routing.module.ts","./src/app/modules/admin/notification/notification-setup/notification-setup.service.ts"],"names":[],"mappings":"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","file":"src-app-modules-admin-notification-notification-setup-notification-setup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LearnMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { SearchDrawerModule } from 'src/app/modules/ui/search-drawer/search-drawer.module';\n\nimport { NotificationCategoryModule } from './notification-category/notification-category.module';\n\n\nimport { NotificationSetupRoutingModule } from './notification-setup-routing.module';\nimport { NotificationSetupComponent } from './notification-setup.component';\n\n\n@NgModule({\n  declarations: [NotificationSetupComponent],\n  imports: [\n    CommonModule,\n    SharedModule.forRoot(),\n    LearnMessageModule,\n    SearchDrawerModule,\n    NotificationCategoryModule,\n    NotificationSetupRoutingModule\n  ]\n})\nexport class NotificationSetupModule { }\n","import { Component, OnInit, ViewEncapsulation, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\nimport { MatDrawer } from '@angular/material/sidenav';\n\nimport { NotificationSetupService } from './notification-setup.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\n\n@Component({\n  selector: 'notification-setup',\n  templateUrl: './notification-setup.component.html',\n  styleUrls: ['./notification-setup.component.scss'],\n  encapsulation  : ViewEncapsulation.None\n})\nexport class NotificationSetupComponent implements OnInit {\n\n\n  isDataLoaded:boolean = true;\n\n  @ViewChild('matDrawer', {static: true})\n  matDrawer: MatDrawer;\n\n  drawerMode: 'over';\n  private _unsubscribeAll: Subject<any>;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private sharedService:SharedService,\n    private notificationSetupService: NotificationSetupService\n  ) {\n\n    this._unsubscribeAll = new Subject();\n\n  }\n\n  onBackdropClicked() {\n\n    // Get the current activated route\n    let route = this._activatedRoute;\n    while ( route.firstChild )\n    {\n        route = route.firstChild;\n    }\n\n    // Go to the parent route\n    this._router.navigate(['/notification/setup'], {relativeTo: route});\n    this.matDrawer.close();\n\n    // Mark for check\n    this._changeDetectorRef.markForCheck();\n\n  }\n\n  addNotificationCategory(event) {\n\n    if(event) {\n\n      // Get the current activated route\n      let route = this._activatedRoute;\n      while ( route.firstChild )\n      {\n          route = route.firstChild;\n      }\n\n      var id = this.sharedService.guid();\n\n      this.notificationSetupService.setNotificationSetupMatDrawer({id:id, data: null, isedit: false});\n      this._router.navigate(['category/new', id], {relativeTo: route});\n\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n\n    }\n\n  }\n\n  editNotificationCategory(item) {\n\n    // Get the current activated route\n    let route = this._activatedRoute;\n    while ( route.firstChild )\n    {\n        route = route.firstChild;\n    }\n\n    this.notificationSetupService.setNotificationSetupMatDrawer({id:item.id, data: item, isedit: true});\n    this._router.navigate(['category/edit', item.id], {relativeTo: route});\n\n    //Mark for check\n    this._changeDetectorRef.markForCheck();\n\n  }\n\n  viewNotificationCategory(item) {\n\n    // Get the current activated route\n    let route = this._activatedRoute;\n\n    while ( route.firstChild )\n    {\n        route = route.firstChild;\n    }\n\n    this.notificationSetupService.setNotificationSetupMatDrawer({id:item.id, data: item, isedit: false});\n    this._router.navigate(['category/view', item.id], {relativeTo: route});\n\n    //Mark for check\n    this._changeDetectorRef.markForCheck();\n\n  }\n\n  onGlSearchFilter(event) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"notification-setup-wrapper\">\n\n  <app-loader *ngIf=\"!isDataLoaded\"></app-loader>\n\n  <mat-drawer-container (backdropClick)=\"onBackdropClicked()\">\n\n    <!-- Drawer -->\n\t\t<mat-drawer [mode]=\"drawerMode\"\n\t\t[opened]=\"false\"\n\t\t[position]=\"'end'\"\n\t\t[disableClose]=\"true\"\n\t\t#matDrawer>\n\n\t\t\t<router-outlet></router-outlet>\n\n    </mat-drawer>\n\n    <mat-drawer-content>\n\n      <div class=\"main\">\n\n        <ng-container *ngIf=\"isDataLoaded\">\n\n          <div class=\"flex mb-4\">\n            <h4 class=\"pb-1\">Setup</h4>\n          </div>\n\n          <div class=\"pt-5\">\n\n            <mat-accordion >\n\n              <notification-category (newNotificationCategoryEvent)=\"addNotificationCategory($event)\" (editNotificationCategoryEvent)=\"editNotificationCategory($event)\" (viewNotificationCategoryEvent)=\"viewNotificationCategory($event)\" ></notification-category>\n\n            </mat-accordion>\n\n\n          </div>\n\n        </ng-container>\n\n      </div>\n\n    </mat-drawer-content>\n\n\n  </mat-drawer-container>\n\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NotificationCategoryRoutingModule } from './notification-category-routing.module';\nimport { LearnMessageModule } from 'src/app/modules/ui/message/message.module';\n\nimport { NotificationCategoryComponent } from './notification-category.component';\nimport { AddNotificationCategoryComponent } from './add-notification-category/add-notification-category.component';\n\n@NgModule({\n  declarations: [NotificationCategoryComponent, AddNotificationCategoryComponent],\n  exports: [\n    NotificationCategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule.forRoot(),\n    LearnMessageModule,\n    NotificationCategoryRoutingModule\n  ],\n  bootstrap: [\n    NotificationCategoryComponent\n  ]\n})\nexport class NotificationCategoryModule { }\n","import { Component, OnInit, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\n\nimport { Observable, BehaviorSubject, Subscription, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\nimport { NotificationCategoryService } from 'src/app/swagger/api/controllers/NotificationCategory';\nimport { NotificationSetupService } from 'src/app/modules/admin/notification/notification-setup/notification-setup.service'\n\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { ModalsService } from 'src/app/modules/ui/modals/modals.service';\n\n\n@Component({\n  selector: 'notification-category',\n  templateUrl: './notification-category.component.html',\n  styleUrls: ['./notification-category.component.scss'],\n  encapsulation  : ViewEncapsulation.None\n})\nexport class NotificationCategoryComponent implements OnInit {\n\n  isExpanded:boolean = false;\n  isDataLoaded:boolean = false;\n  isError:boolean = false;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  _categoryList:any;\n  fullCategoryList:any = [];\n\n  searchData:FormControl;\n\n  search:string = '';\n  deleteSubscribe:Subscription;\n\n  ItemStartIndex: any = 0;\n  ItemEndIndex: any;\n  totalItems: any;\n  itemLimit: any = 5;\n\n  allData: any;\n\n  message: any;\n\n  @Output() newNotificationCategoryEvent = new EventEmitter<boolean>();\n  @Output() editNotificationCategoryEvent = new EventEmitter<any>();\n  @Output() viewNotificationCategoryEvent = new EventEmitter<any>();\n\n\n  constructor(\n    private notificationSetupService: NotificationSetupService,\n    private notificationCategoryService: NotificationCategoryService,\n    private sessionService: SessionService,\n    private modalsService: ModalsService\n  ) {\n\n    // Set the private defaults\n    this._unsubscribeAll = new Subject();\n\n    this.message = null;\n\n    this._categoryList = new BehaviorSubject(null);\n    this.searchData = new FormControl('');\n\n   }\n\n  get category$(): Observable<any>{\n    return this._categoryList.asObservable();\n  }\n\n\n  addNotificationCategory(event) {\n    event.stopPropagation();\n    this.newNotificationCategoryEvent.next(true)\n  }\n\n  editNotificationCategory(item) {\n    this.editNotificationCategoryEvent.next(item)\n  }\n\n  viewNotificationCategory(item) {\n    this.viewNotificationCategoryEvent.next(item)\n  }\n\n  deleteNotificationCategory(item) {\n    this.modalsService.showDeleteConfirmModal(item.id)\n  }\n\n  getNotificationCategoryList() {\n\n    this.isDataLoaded = false\n\n    let params = {\n      UserId: this.sessionService.userId\n    }\n\n    this.notificationCategoryService.getNotificationCategoryList(params).subscribe((res:any) => {\n\n      this.isDataLoaded = true\n\n      // Hide the message\n      this.message = null;\n\n\n      if(res.value) {\n\n        let newData = res.value.filter(item => {\n          return item.active\n        });\n\n        this.fullCategoryList = newData;\n        this.allData = newData;\n        this._categoryList.next(newData);\n      }\n      else {\n\n        this.isError = true;\n\n        // Show the error message\n        this.message = {\n          appearance: 'outline',\n          content   : res.errors,\n          shake     : true,\n          showIcon  : false,\n          type      : 'error'\n        };\n\n      }\n\n    }, error => {\n\n      this.isDataLoaded = true\n      this.isError = true;\n\n      // Show the error message\n      this.message = {\n        appearance: 'outline',\n        content   : 'Some error occurred',\n        shake     : true,\n        showIcon  : false,\n        type      : 'error'\n      };\n\n    })\n\n  }\n\n  ngOnInit(): void {\n\n    this.getNotificationCategoryList();\n\n    this.notificationSetupService.notificationsetupentryrefreshcast.subscribe((res:any) => {\n      if(res){\n        this.getNotificationCategoryList();\n      }\n    })\n\n    this.category$.pipe( filter(res => res != null),\n    ).subscribe((res:any) => {\n\n      this.totalItems = res.length;\n      this.ItemStartIndex = 0;\n\n      if (this.totalItems > this.itemLimit) {\n        this.ItemEndIndex = this.itemLimit;\n      }\n      else {\n        this.ItemEndIndex = this.totalItems;\n      }\n\n    });\n\n    this.deleteSubscribe = this.modalsService.deleteindexcast.subscribe((id:any) => {\n\n\n      if(id != null) {\n\n        let details = {\n          UserId: this.sessionService.userId,\n          ClientId: this.sessionService.clientId,\n          NotificationCategoryId: id,\n        }\n\n        this.notificationCategoryService.deleteNotificationCategory(details).subscribe((res:any) => {\n\n          if(res.value) {\n            this.fullCategoryList = this.fullCategoryList.filter(item => {\n              return item.id != id\n            })\n\n            this.allData = this.fullCategoryList;\n            this._categoryList.next(this.fullCategoryList);\n          }\n\n        }, error => {\n\n        })\n\n      }\n\n    })\n\n  }\n\n  ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n        this.deleteSubscribe.unsubscribe();\n    }\n\n}\n","<div class=\"notification-category-wrapper\">\n\n  <app-loader *ngIf=\"!isDataLoaded\"></app-loader>\n\n  <ng-container *ngIf=\"isDataLoaded\">\n\n    <mat-expansion-panel class=\"box-border\" (opened)=\"isExpanded = true\" (closed)=\"isExpanded = false\">\n\n      <mat-expansion-panel-header>\n          <mat-panel-title>\n\n              <div class=\"flex w-100 align-items-center\">\n                  <div class=\"flex\">\n                    <h6>Notification category</h6>\n                    <p class=\"text-secondary ml-6\">{{totalItems}} Items</p>\n                  </div>\n                  <div class=\"ml-auto\" *ngIf=\"isExpanded\">\n                    <button class=\"mini-button bg-yellow-400 text-white\" mat-flat-button (click)=\"addNotificationCategory($event)\">\n                      Add Category\n                    </button>\n                  </div>\n              </div>\n          </mat-panel-title>\n      </mat-expansion-panel-header>\n\n      <ng-container *ngFor=\"let item of category$ | async | slice:ItemStartIndex:ItemEndIndex; let i = index\">\n\n        <div class=\"bg-card shadow mb-6\">\n\n          <div class=\"row align-items-center\">\n            <div class=\"col-md-8 flex py-2 align-items-center\">\n              <h5 class=\"rounded md:h-12 md:w-12 h-16 w-16 flex items-center justify-center random-colors-{{i+1}} text-uppercase\">\n                {{item.name.charAt(0)}}\n              </h5>\n               <div class=\"list ml-8 md:flex md:align-items-center\">\n                <h6>{{item.name}}</h6>\n                <p class=\"text-secondary md:ml-8\">{{item.description}}</p>\n               </div>\n            </div>\n            <div class=\"col-md-4 icon-actions text-right pt-8 pb-2 md:py-0\">\n              <mat-icon class=\"mx-4 view\"  svgIcon=\"feather:eye\" (click)=\"viewNotificationCategory(item)\"></mat-icon>\n              <mat-icon class=\"mx-4 edit\" svgIcon=\"feather:edit\" (click)=\"editNotificationCategory(item)\"></mat-icon>\n              <mat-icon class=\"mx-4 delete\" svgIcon=\"feather:trash-2\" (click)=\"deleteNotificationCategory(item)\"></mat-icon>\n            </div>\n          </div>\n\n        </div>\n\n      </ng-container>\n\n      <ng-container *ngIf=\"isError\">\n\n        <!-- Message -->\n       <learn-message *ngIf=\"message\" [appearance]=\"message.appearance\" [showIcon]=\"message.showIcon\" [type]=\"message.type\" [@shake]=\"message.shake\">\n         {{message.content}}\n       </learn-message>\n\n      </ng-container>\n\n    </mat-expansion-panel>\n\n  </ng-container>\n\n\n\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotificationCategoryRoutingModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\n\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\nimport { NotificationSetupComponent } from 'src/app/modules/admin/notification/notification-setup/notification-setup.component';\n\nimport { NotificationSetupService } from 'src/app/modules/admin/notification/notification-setup/notification-setup.service';\nimport { ApiService } from 'src/app/core/api/api.service';\n\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ModalsService } from 'src/app/modules/ui/modals/modals.service';\n\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\n\n@Component({\n  selector: 'app-add-notification-category',\n  templateUrl: './add-notification-category.component.html',\n  styleUrls: ['./add-notification-category.component.scss'],\n  encapsulation  : ViewEncapsulation.None\n})\nexport class AddNotificationCategoryComponent implements OnInit {\n\n  isCategorySubmitted:boolean = true;\n  isEdit:boolean = false;\n  isView:boolean = false;\n\n  category:any = {};\n\n  private _unsubscribeAll: Subject<any>;\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _notificationSetupComponent: NotificationSetupComponent,\n    private notificationSetupService:NotificationSetupService,\n    private apiService: ApiService,\n    private sessionService:SessionService,\n    private sharedService:SharedService,\n    private modalsService: ModalsService\n  ) {\n\n     // Set the private defaults\n     this._unsubscribeAll = new Subject();\n\n   }\n\n   closeDrawer(): Promise<MatDrawerToggleResult>{\n    return this._notificationSetupComponent.matDrawer.close();\n   }\n\n  goBack() {\n    this._notificationSetupComponent.matDrawer.close();\n    this.notificationSetupService.setNotificationSetupMatDrawer(null)\n    this._router.navigate(['.'], {relativeTo: this._activatedRoute.parent});\n  }\n\n  submitAddNotificationCategoryForm(form) {\n\n    this.isCategorySubmitted = false;\n\n    let details = {\n      \"id\": 0,\n      \"name\": this.category.name,\n      \"description\": this.category.description,\n      \"active\": true,\n      \"lastModified\": _moment().toISOString(),\n      \"modifiedBy\": this.sessionService.userId\n    }\n\n    if(this.isEdit) {\n      details.id = this.category.id\n    }\n\n    this.apiService.addNotificationCategory(details).subscribe((res:any) => {\n\n      this.isCategorySubmitted = true;\n\n      if(res.value) {\n        this.modalsService.showResponseModal(`Category ${this.isEdit ? 'Updated' : 'Added'} successfully`, 'success').subscribe((res:any) => {\n          if(!this.isEdit){\n            this.notificationSetupService.setNotificationSetupEntryRefresh(true)\n          }\n          this.goBack();\n        })\n\n      }\n      else {\n        this.modalsService.showResponseModal('Some error occurred', 'error')\n      }\n\n    }, error => {\n\n      this.isCategorySubmitted = true;\n      this.modalsService.showResponseModal('Network error', 'error')\n\n    })\n\n  }\n\n  ngOnInit(): void {\n\n\n    //Open the drawer\n    this.notificationSetupService.notificationsetupdrawercast.subscribe(res => {\n\n      if(res != null) {\n        if(res.id != undefined && res.id == this._activatedRoute.params['value'].id){\n          this._notificationSetupComponent.matDrawer.open();\n          if(this._activatedRoute.params['value'].type == 'edit'){\n            this.isEdit = true\n            this.isView = false;\n            this.category = res.data\n          }\n          else if(this._activatedRoute.params['value'].type == 'new') {\n            this.isEdit = false;\n            this.isView = false;\n            this.category = {}\n          }\n          else {\n            this.isEdit = false\n            this.isView = true;\n            this.category = res.data\n          }\n        }\n      }\n\n      //Mark for check\n      this._changeDetectorRef.markForCheck();\n\n    })\n\n  }\n\n}\n","<div class=\"add-enquiry-type-wrapper\">\n\n  <app-loader *ngIf=\"!isCategorySubmitted\"></app-loader>\n\n  <ng-container *ngIf=\"isCategorySubmitted\">\n\n      <ng-container *ngIf=\"!isView\">\n\n        <div class=\"title\">\n          <h4>\n            <span *ngIf=\"!isEdit\">Add Notification Category</span>\n            <span *ngIf=\"isEdit\">Edit Notification Category</span>\n          </h4>\n          <div class=\"ml-auto\">\n            <button mat-icon-button\n              (click)=\"goBack()\">\n            <mat-icon [svgIcon]=\"'close'\"></mat-icon>\n            </button>\n          </div>\n        </div>\n\n        <form #addNotificationCategoryForm = \"ngForm\" name=\"addNotificationCategoryForm\" (ngSubmit)=\"submitAddNotificationCategoryForm(addNotificationCategoryForm)\"  novalidate>\n            <div class=\"row\">\n\n                <div class=\"col-sm-12\">\n                    <div class=\"input-box\">\n                        <label>Title<span class=\"mandatory\">*</span></label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Enter\" name=\"CategoryName\" [(ngModel)]=\"category.name\" required>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-12\">\n                  <div class=\"input-box\">\n                      <label>Description<span class=\"mandatory\">*</span></label>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Enter\" name=\"CategoryDescription\" [(ngModel)]=\"category.description\" required>\n                  </div>\n              </div>\n\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <button class=\"w-100\" mat-flat-button [color]=\"'primary'\">Submit</button>\n                </div>\n            </div>\n\n        </form>\n\n      </ng-container>\n\n      <ng-container *ngIf=\"isView\">\n\n        <div class=\"title\">\n          <h4>View Appointment Category</h4>\n          <div class=\"ml-auto\">\n            <button mat-icon-button\n              (click)=\"goBack()\">\n            <mat-icon [svgIcon]=\"'close'\"></mat-icon>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"content\">\n          <div class=\"mb-10\">\n            <p class=\"text-secondary\">Name:</p>\n            <h6>{{category.name}}</h6>\n          </div>\n          <div class=\"mb-10\">\n            <p class=\"text-secondary\">Description:</p>\n            <h6>{{category.description}}</h6>\n          </div>\n        </div>\n\n      </ng-container>\n\n  </ng-container>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { NotificationSetupService } from './notification-setup.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationSetupResolver implements Resolve<boolean> {\n\n  constructor(\n    private router: Router,\n    private notificationSetupService:NotificationSetupService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n  {\n\n    var data = this.notificationSetupService.getNotificationSetupMatDrawer();\n\n    if(data == null){\n\n      const parentUrl = state.url.split('/').slice(0, -3).join('/');\n\n      // Navigate to parent url\n      this.router.navigateByUrl(parentUrl);\n\n    }\n\n\n    return;\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationSetupComponent } from './notification-setup.component';\nimport { AddNotificationCategoryComponent } from './notification-category/add-notification-category/add-notification-category.component';\n\nimport { NotificationSetupResolver } from './notification-setup.resolver';\n\nconst routes: Routes = [\n  { path: '', component: NotificationSetupComponent,\n    children: [\n      {\n        path         : 'category/:type/:id',\n        component    : AddNotificationCategoryComponent,\n        resolve: {\n          NotificationSetupResolver\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NotificationSetupRoutingModule { }\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationSetupService {\n\n  private notificationSetupMatDrawer = new BehaviorSubject<any>(null);\n  notificationsetupdrawercast = this.notificationSetupMatDrawer.asObservable();\n\n  private notificationSetupEntryRefresh = new BehaviorSubject<any>(false);\n  notificationsetupentryrefreshcast = this.notificationSetupEntryRefresh.asObservable();\n\n  constructor() { }\n\n  getNotificationSetupMatDrawer(){\n    return this.notificationSetupMatDrawer.value\n  }\n\n  setNotificationSetupMatDrawer(value){\n    this.notificationSetupMatDrawer.next(value);\n  }\n\n  getNotificationSetupEntryRefresh(){\n    return this.notificationSetupEntryRefresh.value\n  }\n\n  setNotificationSetupEntryRefresh(value){\n    this.notificationSetupEntryRefresh.next(value);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}