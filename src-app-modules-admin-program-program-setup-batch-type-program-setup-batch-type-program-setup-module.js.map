{"version":3,"sources":["./src/app/modules/admin/program/program-setup/batch-type-program-setup/batch-type-program-setup-routing.module.ts","./src/app/modules/admin/program/program-setup/batch-type-program-setup/batch-type-program-setup.module.ts","./src/app/modules/admin/program/program-setup/batch-type-program-setup/batch-type-program-setup.component.ts","./src/app/modules/admin/program/program-setup/batch-type-program-setup/batch-type-program-setup.component.html"],"names":[],"mappings":"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","file":"src-app-modules-admin-program-program-setup-batch-type-program-setup-batch-type-program-setup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BatchTypeProgramSetupComponent } from './batch-type-program-setup.component';\n\n\nconst routes: Routes = [\n  { path: '', component: BatchTypeProgramSetupComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BatchTypeProgramSetupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LearnMessageModule } from 'src/app/modules/ui/message/message.module';\n\nimport { BatchTypeProgramSetupRoutingModule } from './batch-type-program-setup-routing.module';\nimport { BatchTypeProgramSetupComponent } from './batch-type-program-setup.component';\n\n\n@NgModule({\n  declarations: [BatchTypeProgramSetupComponent],\n  exports: [\n    BatchTypeProgramSetupComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule.forRoot(),\n    LearnMessageModule,\n    BatchTypeProgramSetupRoutingModule\n  ]\n})\nexport class BatchTypeProgramSetupModule { }\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { filter, map, startWith, debounceTime, takeUntil } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Subscription, Subject } from 'rxjs';\n\nimport { BatchService } from 'src/app/swagger/api/controllers/Batch';\n\nimport { ProgramSetupService } from 'src/app/modules/admin/program/program-setup/program-setup.service';\n\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ModalsService } from 'src/app/modules/ui/modals/modals.service';\n\n@Component({\n  selector: 'app-batch-type-program-setup',\n  templateUrl: './batch-type-program-setup.component.html',\n  styleUrls: ['./batch-type-program-setup.component.scss'],\n  encapsulation  : ViewEncapsulation.None\n})\nexport class BatchTypeProgramSetupComponent implements OnInit {\n\n   // Private\n   private _unsubscribeAll: Subject<any>;\n\n   isDataLoaded:boolean = false;\n   isError:boolean = false;\n\n   batchTypeData:string = \"\";\n\n   _batchTypesList:any;\n   fullBatchesList:any = [];\n\n   searchData:FormControl;\n\n   search:string = '';\n   deleteSubscribe:Subscription;\n\n   ItemStartIndex: any = 0;\n   ItemEndIndex: any;\n   totalItems: any;\n   itemLimit: any = 5;\n\n   allData: any;\n\n   message: any;\n\n   constructor(\n     private _changeDetectorRef: ChangeDetectorRef,\n     private _activatedRoute: ActivatedRoute,\n     private _router: Router,\n     private batchService: BatchService,\n     private programSetupService: ProgramSetupService,\n     private sessionService: SessionService,\n     private sharedService:SharedService,\n     private modalsService: ModalsService\n   ) {\n\n     // Set the private defaults\n     this._unsubscribeAll = new Subject();\n\n     this.message = null;\n\n     this._batchTypesList = new BehaviorSubject(null);\n     this.searchData = new FormControl('');\n\n   }\n\n   get batches$(): Observable<any>{\n     return this._batchTypesList.asObservable();\n   }\n\n\n\n   addBatchTypeProgram() {\n     var id = this.sharedService.guid();\n     this.programSetupService.setProgramSetupMatDrawer({id: id, category: 'batch', data: null, isedit: false})\n   }\n\n   editBatchTypeProgram(data){\n     this.programSetupService.setProgramSetupMatDrawer({id: data.id, category: 'batch', data: data, isedit: true})\n   }\n\n   viewBatchTypeProgram(data){\n     this.programSetupService.setProgramSetupMatDrawer({id: data.id, category: 'batch', data: data, isedit: false})\n   }\n\n   deleteBatchTypeProgram(id){\n     this.modalsService.showDeleteConfirmModal(id)\n   }\n\n   getIndexParams(event){\n\n     this.ItemStartIndex = event.ItemStartIndex;\n     this.ItemEndIndex = event.ItemEndIndex;\n     this.itemLimit = event.itemLimit;\n\n   }\n\n   onGlSearchFilter(event) {\n     if (event != \"\") {\n       let newData = this.allData.filter(item => {\n         for (let field in item) {\n           if (item[field] === null || item[field] === undefined) {\n             continue;\n           }\n           if (item[field].toString().toLowerCase().indexOf(event.toString().toLowerCase()) !== -1) {\n             return item;\n           }\n         }\n       })\n\n       this._batchTypesList.next(newData);\n     } else {\n       this.fullBatchesList = this.allData;\n       this._batchTypesList.next(this.fullBatchesList);\n     }\n\n   }\n\n   getBatchTypeList() {\n\n    this.isDataLoaded = false\n\n    let params = {\n      UserId: this.sessionService.userId,\n      ClientId: this.sessionService.clientId\n    }\n\n     this.batchService.getBatchCategoryList(params).subscribe((res:any) => {\n\n       this.isDataLoaded = true\n\n       // Hide the message\n       this.message = null;\n\n       if(res.value) {\n\n        let newData = res.value.filter(item => {\n          return item.active\n        });\n\n        this.fullBatchesList = newData;\n        this.allData = newData;\n        this._batchTypesList.next(newData);\n\n       }\n       else {\n\n         this.isError = true;\n\n         // Show the error message\n         this.message = {\n           appearance: 'outline',\n           content   : res.errors,\n           shake     : true,\n           showIcon  : false,\n           type      : 'error'\n         };\n\n       }\n\n     }, error => {\n\n       this.isDataLoaded = true\n       this.isError = true;\n\n       // Show the error message\n       this.message = {\n         appearance: 'outline',\n         content   : 'Some error occurred',\n         shake     : true,\n         showIcon  : false,\n         type      : 'error'\n       };\n\n     })\n\n   }\n\n   ngOnInit(): void {\n\n     this.getBatchTypeList();\n\n     this.programSetupService.programsetupentryrefreshcast.subscribe((res:any) => {\n      if(res){\n        this.getBatchTypeList();\n      }\n    })\n\n     this.batches$.pipe( filter(res => res != null),\n     ).subscribe((res:any) => {\n\n       this.totalItems = res.length;\n       this.ItemStartIndex = 0;\n\n       if (this.totalItems > this.itemLimit) {\n         this.ItemEndIndex = this.itemLimit;\n       }\n       else {\n         this.ItemEndIndex = this.totalItems;\n       }\n\n     });\n\n     // Subscribe to search input field value changes\n     this.searchData.valueChanges\n     .pipe(\n       startWith(''),\n       map((val) => {\n\n         let newData = this.fullBatchesList.filter(item => {\n           for (let field in item) {\n             if (item[field] === null || item[field] === undefined) {\n               continue;\n             }\n             if (item[field].toString().toLowerCase().indexOf(val.toString().toLowerCase()) !== -1) {\n               return item;\n             }\n           }\n         })\n\n         this._batchTypesList.next(newData);\n\n\n       })\n     )\n     .subscribe();\n\n     this.deleteSubscribe = this.modalsService.deleteindexcast.subscribe((id:any) => {\n\n\n      if(id != null) {\n\n        let details = {\n          UserId: this.sessionService.userId,\n          ClientId: this.sessionService.clientId,\n          BatchCategoryId: id,\n        }\n\n        this.batchService.deleteBatchCategory(details).subscribe((res:any) => {\n\n          if(res.value) {\n            this.fullBatchesList = this.fullBatchesList.filter(item => {\n              return item.id != id\n            })\n\n            this.allData = this.fullBatchesList;\n            this._batchTypesList.next(this.fullBatchesList);\n          }\n\n        }, error => {\n\n        })\n\n\n\n      }\n\n    })\n\n   }\n\n   ngOnDestroy(): void\n     {\n         // Unsubscribe from all subscriptions\n         this._unsubscribeAll.next();\n         this._unsubscribeAll.complete();\n         this.deleteSubscribe.unsubscribe();\n     }\n\n}\n","<div class=\"batch-type-program-setup-wrapper\">\n\n  <app-loader *ngIf=\"!isDataLoaded\"></app-loader>\n\n  <ng-container *ngIf=\"isDataLoaded\">\n\n\n    <div class=\"flex\">\n\n      <div>\n        <h4 class=\"pb-1\">Setup Batch Type</h4>\n        <p class=\"text-secondary\">{{totalItems}} results found</p>\n      </div>\n\n      <div class=\"ml-auto\">\n        <button mat-flat-button [color]=\"'primary'\" (click)=\"addBatchTypeProgram()\">\n          <mat-icon class=\"mr-2\" [svgIcon]=\"'add'\"></mat-icon>\n          Add Batch Type\n        </button>\n      </div>\n\n    </div>\n\n    <div class=\"mt-16\">\n\n      <ng-container *ngFor=\"let batch of batches$ | async | slice:ItemStartIndex:ItemEndIndex; let i = index\">\n\n        <div class=\"bg-card shadow mb-6\">\n\n          <div class=\"row align-items-center\">\n            <div class=\"col-md-8 flex py-2 align-items-center\">\n              <h5 class=\"rounded md:h-12 md:w-12 h-16 w-16 flex items-center justify-center random-colors-{{i+1}} text-uppercase\">\n                {{batch.name.charAt(0)}}\n              </h5>\n               <div class=\"list ml-8 md:flex md:align-items-center\">\n                <h6 class=\"mb-1 md:mb-0\">{{batch.name}}</h6>\n                <p class=\"text-secondary md:ml-16\">{{batch.description}}</p>\n               </div>\n            </div>\n            <div class=\"col-md-4 icon-actions text-right pt-8 pb-2 md:py-0\">\n              <mat-icon class=\"mx-5 md:mx-6 view\"  svgIcon=\"feather:eye\" (click)=\"viewBatchTypeProgram(batch)\"></mat-icon>\n              <mat-icon class=\"mx-5 md:mx-6 edit\" svgIcon=\"feather:edit\" (click)=\"editBatchTypeProgram(batch)\"></mat-icon>\n              <mat-icon class=\"mx-5 md:mx-6 delete\" svgIcon=\"feather:trash-2\" (click)=\"deleteBatchTypeProgram(batch.id)\"></mat-icon>\n            </div>\n          </div>\n\n        </div>\n\n      </ng-container>\n\n      <ng-container *ngIf=\"isError\">\n\n         <!-- Message -->\n        <learn-message *ngIf=\"message\" [appearance]=\"message.appearance\" [showIcon]=\"message.showIcon\" [type]=\"message.type\" [@shake]=\"message.shake\">\n          {{message.content}}\n        </learn-message>\n\n      </ng-container>\n\n    </div>\n\n    <div class=\"bg-card shadow p-0 mt-4\" *ngIf=\"totalItems != 0\">\n      <app-pagination [totalItems]=\"totalItems\" [ItemStartIndex]=\"ItemStartIndex\"\n              [ItemEndIndex]=\"ItemEndIndex\" [itemLimit]=\"itemLimit\" (outputParams)=\"getIndexParams($event)\">\n      </app-pagination>\n    </div>\n\n  </ng-container>\n\n</div>\n"],"sourceRoot":"webpack:///"}