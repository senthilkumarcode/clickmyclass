{"version":3,"sources":["./src/app/modules/admin/user/add-user/add-user.component.ts","./src/app/modules/admin/user/add-user/add-user.component.html","./src/app/modules/admin/user/add-user/new-user/new-user.component.ts","./src/app/modules/admin/user/add-user/new-user/new-user.component.html","./src/app/modules/admin/user/add-user/add-user.module.ts","./src/app/modules/admin/user/add-user/add-user-routing.module.ts"],"names":[],"mappings":"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","file":"src-app-modules-admin-user-add-user-add-user-module.js","sourcesContent":["import { Component, OnInit, Inject, ViewEncapsulation, ViewChild, ElementRef  } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { SearchCountryField, CountryISO } from 'ngx-intl-tel-input';\nimport { LearnAnimations } from 'src/@learn/animations';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations   : LearnAnimations\n})\nexport class AddUserComponent implements OnInit {\n\n  message: any;\n\n  userInput:any = \"\";\n  phoneNumber:any;\n  email:string = \"\";\n\n  SearchCountryField = SearchCountryField;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [CountryISO.UnitedStates, CountryISO.UnitedKingdom];\n  selectedCountryISO: any = \"\";\n\n  isUserNotAvailable:boolean = false;\n\n  user = {};\n\n  constructor(\n    @Inject(DOCUMENT) private _document: any,\n    private _activatedRoute: ActivatedRoute,\n    private _formBuilder: FormBuilder,\n    private _router: Router\n  ) {\n\n    // Set the defaults\n    this.message = null;\n\n  }\n\n  isUserInputEmpty() {\n    return this.userInput == \"\" ? true : false\n  }\n\n  isPhoneNumber() {\n    return this.userInput != \"\" && !isNaN(this.userInput.charAt(0)) ? true : false;\n  }\n\n  isEmail(){\n    return isNaN(this.userInput.charAt(0)) ? true : false\n  }\n\n  passInput(data) {\n    if(data != \"\") {\n      if(this.isPhoneNumber()){\n        this.phoneNumber = data\n        setTimeout(() => {\n          document.getElementById(\"userMobile\").focus();\n        }, 0);\n      }\n      else{\n        if(this.isEmail()){\n          this.email = data\n          setTimeout(() => {\n            document.getElementById(\"userEmail\").focus();\n          }, 0);\n        }\n      }\n    }\n  }\n\n  checkEmptyEmail(data) {\n\n    this.isUserNotAvailable = false;\n\n    if(data == \"\" || data == null){\n      this.userInput = \"\";\n      setTimeout(() => {\n        document.getElementById(\"userInput\").focus();\n      }, 0);\n    }\n    else {\n\n      if(!isNaN(data)){\n        this.email = \"\";\n        this.userInput = data;\n        this.phoneNumber = this.userInput;\n        setTimeout(() => {\n          document.getElementById(\"userMobile\").focus();\n        }, 0);\n      }\n\n    }\n  }\n\n  checkEmptyPhoneNumber(data) {\n\n    this.isUserNotAvailable = false;\n\n    if(data == \"\" || data == null){\n      this.userInput = \"\";\n      setTimeout(() => {\n        document.getElementById(\"userInput\").focus();\n      }, 0);\n    }\n\n  }\n\n  validateEmail(val) {\n    if(val != \"\"){\n      var rex = new RegExp(/^[a-zA-Z0-9_\\-.]+@[a-zA-Z0-9\\-]+\\.[a-zA-Z0-9\\-.]+$/);\n      return rex.test(val);\n    }\n    return true\n  }\n\n\n  checkUser(form) {\n\n    let isValidEmail = this.validateEmail(this.email);\n\n    if(isValidEmail && form.valid){\n\n      this.message = null;\n\n      this.isUserNotAvailable = true;\n      this.user = form.value;\n\n    }\n    else {\n\n      // Show the error message\n      this.message = {\n        appearance: 'outline',\n        content   : \"Enter valid credentails\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n\n    }\n  }\n\n  ngOnInit(): void {\n    this.selectedCountryISO = 'IN'\n  }\n\n}\n","<div class=\"add-user-wrapper\">\n\n  <div class=\"main\">\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <learn-message class=\"mb-4\" *ngIf=\"message\" [appearance]=\"message.appearance\" [showIcon]=\"message.showIcon\"\n          [type]=\"message.type\" [@shake]=\"message.shake\">\n          {{message.content}}\n        </learn-message>\n      </div>\n    </div>\n\n    <h5 class=\"mb-4\">Check the availability of user</h5>\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"bg-card shadow p-10\">\n\n          <form #userCheckForm=\"ngForm\" name=\"userCheckForm\" (ngSubmit)=\"checkUser(userCheckForm)\" novalidate>\n\n            <div class=\"flex align-items-center\">\n              <div class=\"w-100 relative\">\n                <input class=\"form-control\" type=\"text\" *ngIf=\"isUserInputEmpty()\" name=\"userInput\" id=\"userInput\"\n                  placeholder=\"Enter Email ID or Phone number\" [(ngModel)]=\"userInput\"\n                  (ngModelChange)=\"passInput(userInput)\" autocomplete=\"off\" required>\n                <ngx-intl-tel-input class=\"w-100\" *ngIf=\"isPhoneNumber()\" [inputId]=\"'userMobile'\"\n                  [preferredCountries]=\"preferredCountries\" [enableAutoCountrySelect]=\"true\" [enablePlaceholder]=\"true\"\n                  [searchCountryFlag]=\"true\" [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n                  [selectFirstCountry]=\"false\" [selectedCountryISO]=\"selectedCountryISO\" [maxLength]=\"15\"\n                  [phoneValidation]=\"false\" [separateDialCode]=\"true\" [(ngModel)]=\"phoneNumber\" name=\"phone\"\n                  (ngModelChange)=\"checkEmptyPhoneNumber(phoneNumber)\">\n                </ngx-intl-tel-input>\n                <input class=\"w-100 form-control\" type=\"text\" id=\"userEmail\" *ngIf=\"isEmail()\" name=\"email\"\n                  [(ngModel)]=\"email\" (ngModelChange)=\"checkEmptyEmail(email)\" autocomplete=\"off\" required>\n                  <help-tooltip title=\"addUser\" *ngIf=\"isUserInputEmpty()\"></help-tooltip>\n              </div>\n              <button class=\"ml-4\" mat-flat-button [color]=\"'primary'\">Search</button>\n            </div>\n\n          </form>\n\n        </div>\n\n      </div>\n    </div>\n\n    <new-user *ngIf=\"isUserNotAvailable\" [user]=\"user\"></new-user>\n\n  </div>\n</div>\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SearchCountryField, CountryISO } from 'ngx-intl-tel-input';\nimport { LearnAnimations } from 'src/@learn/animations';\n\n@Component({\n  selector: 'new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations   : LearnAnimations\n})\nexport class NewUserComponent implements OnInit {\n\n  @Input() user;\n\n  userInput:string = \"\";\n\n  SearchCountryField = SearchCountryField;\n  CountryISO = CountryISO;\n  preferredCountries: CountryISO[] = [CountryISO.UnitedStates, CountryISO.UnitedKingdom];\n  selectedCountryISO: any = \"\";\n\n  message: any;\n\n\n  constructor() {\n\n    this.message = null;\n\n  }\n\n  submitNewUser(form) {\n\n    if(form.valid){\n\n      this.message = null;\n\n    }\n    else {\n\n       // Show the error message\n       this.message = {\n        appearance: 'outline',\n        content   : \"Enter all the required fields\",\n        shake     : true,\n        showIcon  : true,\n        type      : 'error'\n      };\n\n    }\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnChanges() {\n\n    this.message = null;\n\n    this.selectedCountryISO = 'IN'\n\n    this.user.genderId = 43;\n\n    if(this.user.phone != null){\n      this.userInput = 'phone'\n    }\n    else {\n      this.userInput = 'email'\n    }\n\n  }\n\n}\n","<div class=\"new-user-wrapper mt-5\">\n\n  <learn-message class=\"mb-5\" *ngIf=\"message\"\n  [appearance]=\"message.appearance\"\n  [showIcon]=\"message.showIcon\"\n  [type]=\"message.type\"\n  [@shake]=\"message.shake\">\n  {{message.content}}\n</learn-message>\n\n  <form #newUserForm=\"ngForm\" name=\"newUserForm\" (ngSubmit)=\"submitNewUser(newUserForm)\" novalidate>\n\n    <div class=\"bg-card p-0 shadow\">\n\n      <div class=\"p-10\">\n        <div class=\"row\">\n          <div class=\"col-sm-4\">\n            <div class=\"input-box\">\n                <label>First Name*</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter\" name=\"firstName\" [(ngModel)]=\"user.firstName\" required>\n            </div>\n          </div>\n          <div class=\"col-sm-4\">\n            <div class=\"input-box\">\n                <label>Last Name*</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter\" name=\"lastName\" [(ngModel)]=\"user.lastName\" required>\n            </div>\n          </div>\n          <div class=\"col-sm-4\">\n            <div class=\"input-box\">\n                <label>Email ID*</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter\" name=\"email\" [(ngModel)]=\"user.email\" [disabled]=\"userInput == 'email'\" required>\n            </div>\n          </div>\n          <div class=\"col-sm-4\">\n            <div class=\"input-box\">\n                <label>Phone Number</label>\n                <ngx-intl-tel-input class=\"w-100\" [inputId]=\"'userMobile'\"\n                  [preferredCountries]=\"preferredCountries\"\n                  [enableAutoCountrySelect]=\"true\" [enablePlaceholder]=\"true\"\n                  [searchCountryFlag]=\"true\"\n                  [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n                  [selectFirstCountry]=\"false\"\n                  [selectedCountryISO]=\"selectedCountryISO\" [maxLength]=\"15\"\n                  [phoneValidation]=\"false\" [separateDialCode]=\"true\"\n                  [(ngModel)]=\"user.phone\" name=\"phone\" [disabled]=\"userInput == 'phone'\">\n                </ngx-intl-tel-input>\n            </div>\n          </div>\n          <div class=\"col-sm-4\">\n            <div class=\"input-box radio-box\">\n              <label>Gender*</label>\n              <div class=\"form-group\">\n                <input name=\"genderType\" id=\"male\" [(ngModel)]=\"user.genderId\" [value]=\"43\"\n                  type=\"radio\">\n                <label class=\"radio-inline\" for=\"male\">Male</label>\n              </div>\n              <div class=\"form-group\">\n                <input name=\"genderType\" id=\"female\" [(ngModel)]=\"user.genderId\" [value]=\"44\"\n                  type=\"radio\">\n                <label class=\"radio-inline\" for=\"female\">Female</label>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-sm-4\">\n            <div class=\"input-box\">\n              <label>Password*</label>\n              <input type=\"password\" class=\"form-control\"\n                placeholder=\"Enter\" name=\"password\" [(ngModel)]=\"user.password\" autocomplete=\"new-password\" required>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"float-right mt-4\">\n      <button mat-flat-button [color]=\"'primary'\">Submit</button>\n    </div>\n\n  </form>\n\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LearnCardModule } from 'src/@learn/components/card/card.module';\nimport { LearnMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { HelpTooltipModule } from 'src/app/modules/ui/help-tooltip/help-tooltip.module'\nimport { NgxIntlTelInputModule } from 'ngx-intl-tel-input';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AddUserRoutingModule } from './add-user-routing.module';\nimport { AddUserComponent } from './add-user.component';\nimport { NewUserComponent } from './new-user/new-user.component';\n\n\n@NgModule({\n  declarations: [AddUserComponent, NewUserComponent],\n  imports: [\n  CommonModule,\n  NgxIntlTelInputModule,\n  LearnCardModule,\n  LearnMessageModule,\n  HelpTooltipModule,\n  SharedModule.forRoot(),\n  AddUserRoutingModule\n  ]\n})\nexport class AddUserModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddUserComponent } from './add-user.component';\n\n\nconst routes: Routes = [\n  { path: '', component: AddUserComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddUserRoutingModule { }\n"],"sourceRoot":"webpack:///"}