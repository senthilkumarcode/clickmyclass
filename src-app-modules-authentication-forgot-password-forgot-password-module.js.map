{"version":3,"sources":["./src/app/modules/authentication/forgot-password/forgot-password.routing.ts","./src/app/modules/authentication/forgot-password/forgot-password.component.ts","./src/app/modules/authentication/forgot-password/forgot-password.component.html","./src/app/modules/authentication/forgot-password/forgot-password.module.ts"],"names":[],"mappings":"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","file":"src-app-modules-authentication-forgot-password-forgot-password-module.js","sourcesContent":["import { Route } from '@angular/router';\nimport { ForgotPasswordComponent } from './forgot-password.component';\n\nexport const forgotPasswordRoutes: Route[] = [\n    // Redirect empty route\n    {\n        path      : '',\n        pathMatch : 'full',\n        redirectTo: 'classic'\n    },\n    // Use 'empty' layout on 'fullscreen' style\n    {\n        path     : 'fullscreen',\n        component: ForgotPasswordComponent,\n        data     : {\n            layout: 'empty'\n        }\n    },\n    // Use 'empty' layout on 'fullscreen-alt' style\n    {\n        path     : 'fullscreen-alt',\n        component: ForgotPasswordComponent,\n        data     : {\n            layout: 'empty'\n        }\n    },\n    // Use defaults on other styles\n    {\n        path     : '**',\n        component: ForgotPasswordComponent\n    }\n];\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { LearnAnimations } from 'src/@learn/animations';\n\n@Component({\n    selector     : 'forgot-password',\n    templateUrl  : './forgot-password.component.html',\n    styleUrls    : ['./forgot-password.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : LearnAnimations\n})\nexport class ForgotPasswordComponent implements OnInit\n{\n    cardStyle: string;\n    forgotPasswordForm: FormGroup;\n    message: any;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {FormBuilder} _formBuilder\n     * @param {Router} _router\n     */\n    constructor(\n        @Inject(DOCUMENT) private _document: any,\n        private _activatedRoute: ActivatedRoute,\n        private _formBuilder: FormBuilder,\n        private _router: Router\n    )\n    {\n        // Set the defaults\n        this.message = null;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n\n        document.querySelector('body').className = '';\n        this._document.body.classList.add('learn-splash-screen-hidden');\n        this._document.body.classList.add('learn-theme-light');\n\n        // Create the form\n        this.forgotPasswordForm = this._formBuilder.group({\n            email: ['', [Validators.required, Validators.email]]\n        });\n\n        // Set the card style for the first time\n        this._setCardStyle();\n\n        // Register to the NavigationEnd event\n        this._router.events\n            .pipe(filter((event) => event instanceof NavigationEnd))\n            .subscribe(() => {\n\n                // Set the card style\n                this._setCardStyle();\n            });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Set the card style from the url\n     * Demonstration purposes only!\n     *\n     * @private\n     */\n    private _setCardStyle(): void\n    {\n        // Get the current route\n        let route = this._activatedRoute;\n        while ( route.firstChild )\n        {\n            route = route.firstChild;\n        }\n\n        // Set the card style from the path\n        this.cardStyle = route.snapshot.url[0].path;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Send the reset link\n     */\n    sendResetLink(): void\n    {\n        // Do nothing if the form is invalid\n        if ( this.forgotPasswordForm.invalid )\n        {\n            return;\n        }\n\n        // Disable the form\n        this.forgotPasswordForm.disable();\n\n        // Hide the message\n        this.message = null;\n\n        // Do your action here...\n\n        // Emulate server delay\n        setTimeout(() => {\n\n            // Re-enable the form\n            this.forgotPasswordForm.enable();\n\n            // Reset the form\n            this.forgotPasswordForm.reset({});\n\n            // Show the message\n            this.message = {\n                appearance: 'outline',\n                content   : 'Password reset sent! You\\'ll receive an email if you are registered on our system.',\n                shake     : false,\n                showIcon  : false,\n                type      : 'success'\n            };\n        }, 1000);\n    }\n}\n","<div class=\"content-layout fullwidth-basic-normal-scroll\">\n\n  <learn-card class=\"auth-card\">\n\n      <!-- Form container -->\n      <div class=\"form-container p-5\">\n\n          <div class=\"form\">\n\n             <!-- Logo -->\n             <div class=\"logo\">\n              <img class=\"img-fluid\" src=\"assets/images/logo-cmc.svg\">\n            </div>\n\n              <!-- Title -->\n              <h2 class=\"title font-bold\">Forgot password?</h2>\n              <h6 class=\"subtitle font-medium text-secondary\">Fill the form to reset your password</h6>\n\n              <!-- Message -->\n              <learn-message *ngIf=\"message\"\n                           [appearance]=\"message.appearance\"\n                           [showIcon]=\"message.showIcon\"\n                           [type]=\"message.type\"\n                           [@shake]=\"message.shake\">\n                  {{message.content}}\n              </learn-message>\n\n              <!-- Forgot password form -->\n              <form [formGroup]=\"forgotPasswordForm\">\n\n                  <!-- Email field -->\n                  <mat-form-field>\n                      <mat-label>Email address</mat-label>\n                      <input id=\"email\"\n                             matInput\n                             [formControlName]=\"'email'\">\n                      <mat-error *ngIf=\"forgotPasswordForm.get('email').hasError('required')\">\n                          Email address is required\n                      </mat-error>\n                      <mat-error *ngIf=\"forgotPasswordForm.get('email').hasError('email')\">\n                          Please enter a valid email address\n                      </mat-error>\n                  </mat-form-field>\n\n                  <!-- Submit button -->\n                  <button class=\"submit-button learn-mat-button-large\"\n                          mat-flat-button\n                          [color]=\"'primary'\"\n                          [disabled]=\"forgotPasswordForm.disabled\"\n                          (click)=\"sendResetLink()\">\n                      <span *ngIf=\"!forgotPasswordForm.disabled\">\n                          Send reset link\n                      </span>\n                      <mat-progress-spinner *ngIf=\"forgotPasswordForm.disabled\"\n                                            [diameter]=\"24\"\n                                            [mode]=\"'indeterminate'\"></mat-progress-spinner>\n                  </button>\n\n                  <!-- Form footer -->\n                <div class=\"form-footer font-medium\">\n                  <span class=\"text-secondary\">Go to</span>\n                  <a class=\"link ml-2\" [routerLink]=\"['/login']\">Login</a>\n                </div>\n\n              </form>\n\n          </div>\n\n      </div>\n\n\n\n  </learn-card>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { LearnCardModule } from 'src/@learn/components/card/card.module';\nimport { LearnMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { forgotPasswordRoutes } from './forgot-password.routing';\n\n@NgModule({\n    declarations: [\n        ForgotPasswordComponent\n    ],\n    imports     : [\n        CommonModule,\n        RouterModule.forChild(forgotPasswordRoutes),\n        LearnCardModule,\n        LearnMessageModule,\n        SharedModule.forRoot()\n    ]\n})\nexport class ForgotPasswordModule\n{\n}\n"],"sourceRoot":"webpack:///"}