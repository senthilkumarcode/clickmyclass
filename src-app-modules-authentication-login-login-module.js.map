{"version":3,"sources":["./src/@learn/components/card/card.module.ts","./src/app/modules/authentication/login/login.module.ts","./src/app/modules/authentication/login/login.component.ts","./src/app/modules/authentication/login/login.component.html","./src/app/modules/authentication/login/login-routing.module.ts","./src/@learn/components/card/card.component.ts","./src/@learn/components/card/card.component.html"],"names":[],"mappings":"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","file":"src-app-modules-authentication-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LearnCardComponent } from 'src/@learn/components/card/card.component';\n\n@NgModule({\n    declarations: [\n      LearnCardComponent\n    ],\n    imports     : [\n        CommonModule\n    ],\n    exports     : [\n      LearnCardComponent\n    ]\n})\nexport class LearnCardModule\n{\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LearnCardModule } from 'src/@learn/components/card/card.module';\nimport { LearnMessageModule } from 'src/app/modules/ui/message/message.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LearnCardModule,\n    LearnMessageModule,\n    SharedModule.forRoot(),\n    LoginRoutingModule\n  ],\n  bootstrap: [LoginComponent]\n})\nexport class LoginModule { }\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { LearnAnimations } from 'src/@learn/animations';\n\nimport { AuthService } from 'src/app/core/auth/auth.service';\n\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations   : LearnAnimations\n})\nexport class LoginComponent implements OnInit {\n\n  signInForm: FormGroup;\n    message: any;\n\n    /**\n     * Constructor\n     *\n     * @param {ActivatedRoute} _activatedRoute\n     * @param {AuthService} _authService\n     * @param {FormBuilder} _formBuilder\n     * @param {Router} _router\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _authService: AuthService,\n        private _formBuilder: FormBuilder,\n        private _router: Router\n    )\n    {\n        // Set the defaults\n        this.message = null;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Create the form\n        this.signInForm = this._formBuilder.group({\n          email     : ['me.class@cmc.com'],\n          password  : ['admin'],\n          rememberMe: ['']\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Sign in\n     */\n    signIn(): void\n    {\n        // Disable the form\n        this.signInForm.disable();\n\n        // Hide the message\n        this.message = null;\n\n        // Get the credentials\n        const credentials = this.signInForm.value;\n\n        // Sign in\n        this._authService.signIn(credentials)\n            .subscribe(() => {\n\n                // Set the redirect url.\n                // The '/signed-in-redirect' is a dummy url to catch the request and redirect the user\n                // to the correct page after a successful sign in. This way, that url can be set via\n                // routing file and we don't have to touch here.\n                const redirectURL = this._activatedRoute.snapshot.queryParamMap.get('redirectURL') || '/signed-in-redirect';\n\n                // Navigate to the redirect url\n                this._router.navigateByUrl(redirectURL);\n\n            }, (response) => {\n\n                // Re-enable the form\n                this.signInForm.enable();\n\n                // Show the error message\n                this.message = {\n                    appearance: 'outline',\n                    content   : response.error,\n                    shake     : true,\n                    showIcon  : false,\n                    type      : 'error'\n                };\n            });\n    }\n\n}\n","<div class=\"content-layout fullwidth-basic-normal-scroll\">\n\n    <div class=\"header w-full\">\n\n        <div class=\"flex items-center h-full\">\n            <a href=\"javascript:void(0)\" class=\"left flex flex-initial no-underline\">\n                <div class=\"logo w-8 mr-6\">\n                    <img src=\"assets/images/logo-cmc.svg\" />\n                </div>\n                <h4 class=\"text-default\">Clickmyclass</h4>\n            </a>\n            <div class=\"ml-auto\">\n                <mat-icon class=\"\" svgIcon=\"home\"></mat-icon>\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"login-wrapper\">\n\n        <learn-card class=\"auth-card\">\n            <div class=\"title px-10\">\n                <div class=\"row\">\n                    <div class=\"col-7\">\n                        <div class=\"text-primary mt-4\">\n                            <div class=\"logo w-12 mb-3\">\n                                <img src=\"assets/images/logo-cmc.svg\" />\n                            </div>\n                            <h6 class=\"text-default\">Login to Clickmyclass</h6>\n                        </div>\n                    </div>\n                    <div class=\"col-5 align-self-end\">\n                        <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"desp px-10 pb-12\">\n\n                <div class=\"form-container\">\n\n                    <div class=\"form\">\n\n                        <!-- Message -->\n                        <learn-message *ngIf=\"message\" [appearance]=\"message.appearance\" [showIcon]=\"message.showIcon\" [type]=\"message.type\" [@shake]=\"message.shake\">\n                            {{message.content}}\n                        </learn-message>\n\n                        <!-- Sign in form -->\n                        <form [formGroup]=\"signInForm\">\n\n                            <!-- Email field -->\n                            <mat-form-field>\n                                <mat-label class=\"font-medium\">Email address</mat-label>\n                                <input id=\"email\" matInput [formControlName]=\"'email'\">\n                            </mat-form-field>\n\n                            <!-- Password field -->\n                            <mat-form-field>\n                                <mat-label class=\"font-medium\">Password</mat-label>\n                                <input id=\"password\" matInput type=\"password\" [formControlName]=\"'password'\" #passwordField>\n                                <button mat-icon-button type=\"button\" (click)=\"passwordField.type === 'password' ? passwordField.type = 'text' : passwordField.type = 'password'\" matSuffix>\n                          <mat-icon *ngIf=\"passwordField.type === 'password'\" [svgIcon]=\"'visibility'\"></mat-icon>\n                          <mat-icon *ngIf=\"passwordField.type === 'text'\" [svgIcon]=\"'visibility_off'\"></mat-icon>\n                        </button>\n                            </mat-form-field>\n\n                            <!-- Field footer -->\n                            <div class=\"field-footer\">\n                                <div class=\"remember-me\">\n                                    <mat-checkbox [color]=\"'primary'\" [formControlName]=\"'rememberMe'\">\n                                        Remember me\n                                    </mat-checkbox>\n                                </div>\n                                <a class=\"link\" [routerLink]=\"['/forgot-password']\">Forgot password?</a>\n                            </div>\n\n                            <!-- Submit button -->\n                            <button class=\"submit-button learn-mat-button-large\" mat-flat-button [color]=\"'primary'\" [disabled]=\"signInForm.disabled\" (click)=\"signIn()\">\n                      <span *ngIf=\"!signInForm.disabled\">\n                        Sign in\n                      </span>\n                      <mat-progress-spinner *ngIf=\"signInForm.disabled\" [diameter]=\"24\" [mode]=\"'indeterminate'\">\n                      </mat-progress-spinner>\n                    </button>\n\n                        </form>\n\n                    </div>\n\n                </div>\n\n            </div>\n        </learn-card>\n\n        <div class=\"subtitle flex pt-16 pb-4 justify-center\">\n            <span class=\"mr-2\">Don't have an account?</span>\n            <a class=\"link\" [routerLink]=\"['/sign-up']\">Sign up</a>\n        </div>\n\n        <p class=\"flex justify-center text-smr font-medium\">©2021<span class=\"text-primary mx-2\">clickmyclass.</span>All rights reserved.</p>\n\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { LearnAnimations } from 'src/@learn/animations';\n\n@Component({\n    selector     : 'learn-card',\n    templateUrl  : './card.component.html',\n    styleUrls    : ['./card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations   : LearnAnimations,\n    exportAs     : 'learnCard'\n})\nexport class LearnCardComponent\n{\n    expanded: boolean;\n    flipped: boolean;\n\n    // Private\n    private _flippable: boolean;\n\n    /**\n     * Constructor\n     *\n     * @param {ElementRef} _elementRef\n     * @param {Renderer2} _renderer2\n     */\n    constructor(\n        private _elementRef: ElementRef,\n        private _renderer2: Renderer2\n    )\n    {\n        // Set the defaults\n        this.expanded = false;\n        this.flippable = false;\n        this.flipped = false;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Setter & getter for flippable\n     *\n     * @param value\n     */\n    @Input()\n    set flippable(value: boolean)\n    {\n        // If the value is the same, return...\n        if ( this._flippable === value )\n        {\n            return;\n        }\n\n        // Update the class name\n        if ( value )\n        {\n            this._renderer2.addClass(this._elementRef.nativeElement, 'learn-card-flippable');\n        }\n        else\n        {\n            this._renderer2.removeClass(this._elementRef.nativeElement, 'learn-card-flippable');\n        }\n\n        // Store the value\n        this._flippable = value;\n    }\n\n    get flippable(): boolean\n    {\n        return this._flippable;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Expand the details\n     */\n    expand(): void\n    {\n        this.expanded = true;\n    }\n\n    /**\n     * Collapse the details\n     */\n    collapse(): void\n    {\n        this.expanded = false;\n    }\n\n    /**\n     * Toggle the expand/collapse status\n     */\n    toggleExpanded(): void\n    {\n        this.expanded = !this.expanded;\n    }\n\n    /**\n     * Flip the card\n     */\n    flip(): void\n    {\n        // Return if not flippable\n        if ( !this.flippable )\n        {\n            return;\n        }\n\n        this.flipped = !this.flipped;\n\n        // Update the class name\n        if ( this.flipped )\n        {\n            this._renderer2.addClass(this._elementRef.nativeElement, 'learn-card-flipped');\n        }\n        else\n        {\n            this._renderer2.removeClass(this._elementRef.nativeElement, 'learn-card-flipped');\n        }\n    }\n}\n","<!-- Flippable card -->\n<ng-container *ngIf=\"flippable\">\n\n    <!-- Front -->\n    <div class=\"learn-card-front\">\n        <ng-content select=\"[learnCardFront]\"></ng-content>\n    </div>\n\n    <!-- Back -->\n    <div class=\"learn-card-back\">\n        <ng-content select=\"[learnCardBack]\"></ng-content>\n    </div>\n\n</ng-container>\n\n<!-- Normal card -->\n<ng-container *ngIf=\"!flippable\">\n\n    <!-- Content -->\n    <ng-content></ng-content>\n\n    <!-- Expansion -->\n    <div class=\"learn-card-expansion\"\n         *ngIf=\"expanded\"\n         [@expandCollapse]>\n        <ng-content select=\"[learnCardExpansion]\"></ng-content>\n    </div>\n\n</ng-container>\n"],"sourceRoot":"webpack:///"}